//
//  This file was auto-generated by Macaw tools 0.9.5-Beta8 version built on Tue, 31 Oct 2017 00:05:58 +0530 
//
package io.macaw.demo.petstore.inventoryservice.impl;

import com.cfx.service.api.config.Configuration;

import io.macaw.db.mysql.utils.DbConnector;
import io.macaw.demo.petstore.inventoryservice.DomainEntityInstantiator;
import io.macaw.demo.petstore.inventoryservice.mysql.db.dao.InventoryDAO;
import io.macaw.demo.petstore.inventoryservice.mysql.db.dto.Inventory;

public class Inventoryservice
		implements com.cfx.service.api.Service, io.macaw.demo.petstore.inventoryservice.Inventoryservice {

	// private static final String MYSQL = "mysql";

	@SuppressWarnings("unused")
	private Configuration config;

	@Override
	public void initialize(com.cfx.service.api.config.Configuration config)
			throws com.cfx.service.api.ServiceException {
		this.config = config;
	}

	@Override
	public void start(com.cfx.service.api.StartContext startContext) throws com.cfx.service.api.ServiceException {
		DbConnector.initialise();
	}

	@Override
	public void stop(com.cfx.service.api.StopContext stopContext) throws com.cfx.service.api.ServiceException {
	}

	@Override
	public io.macaw.demo.petstore.inventoryservice.Inventory addInventory(String itemid, long quantity) {
		io.macaw.demo.petstore.inventoryservice.Inventory inventory = DomainEntityInstantiator.getInstance()
				.newInstance(io.macaw.demo.petstore.inventoryservice.Inventory.class);

		Inventory dto = new Inventory();
		dto.setItemid(itemid);
		dto.setQuantity(quantity);
		inventory.setItemid(itemid);
		inventory.setQuantity(quantity);
		try {
			new InventoryDAO().insert(dto);
		} catch (Exception e) {
			e.printStackTrace();
		}
		return inventory;
	}

	@Override
	public io.macaw.demo.petstore.inventoryservice.Inventory updateInventory(
			io.macaw.demo.petstore.inventoryservice.Inventory inventory) {
		// TODO: Auto-generated code;
		Inventory dto = new Inventory();
		dto.setItemid(inventory.getItemid());
		dto.setQuantity(inventory.getQuantity());

		try {
			new InventoryDAO().update(dto);
		} catch (Exception e) {
			e.printStackTrace();
		}
		return inventory;

	}

	@Override
	public String deleteInventory(String itemid) {
		// TODO: Auto-generated code;
		try {
			new InventoryDAO().deleteById(itemid);
		} catch (Exception e) {
			e.printStackTrace();
		}
		return null;
	}

	@Override
	public long getStockByItemid(String itemid) {
		Inventory findById = new InventoryDAO().findById(itemid);
		return findById == null ? 0 : findById.getQuantity();
	}
}
