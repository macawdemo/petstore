//
//  This file was auto-generated by Macaw tools 0.9.5-Beta8 version built on Tue, 31 Oct 2017 00:05:58 +0530 
//
package io.macaw.demo.petstore.userservice.impl;

import java.lang.Override;
import java.util.List;

import com.cfx.service.api.config.Configuration;

import io.macaw.db.mysql.utils.DbConnector;
import io.macaw.demo.petstore.userservice.DomainEntityInstantiator;
import io.macaw.demo.petstore.userservice.mysql.db.dao.AccountDAO;
import io.macaw.demo.petstore.userservice.mysql.db.dao.BannerdataDAO;
import io.macaw.demo.petstore.userservice.mysql.db.dao.ProfileDAO;
import io.macaw.demo.petstore.userservice.mysql.db.dao.CredentialsDAO;

import io.macaw.demo.petstore.userservice.mysql.db.dto.Account;
import io.macaw.demo.petstore.userservice.mysql.db.dto.Bannerdata;
import io.macaw.demo.petstore.userservice.mysql.db.dto.Credentials;
import io.macaw.demo.petstore.userservice.mysql.db.dto.Profile;

public class Userservice implements com.cfx.service.api.Service, io.macaw.demo.petstore.userservice.Userservice {

	@SuppressWarnings("unused")
	private Configuration config;

	@Override
	public void initialize(com.cfx.service.api.config.Configuration config)
			throws com.cfx.service.api.ServiceException {
		this.config = config;
	}

	@Override
	public void start(com.cfx.service.api.StartContext startContext) throws com.cfx.service.api.ServiceException {
		DbConnector.initialise();
	}

	@Override
	public void stop(com.cfx.service.api.StopContext stopContext) throws com.cfx.service.api.ServiceException {

	}

	@Override
	public io.macaw.demo.petstore.userservice.Account addAccount(io.macaw.demo.petstore.userservice.Account account) {
		// TODO: Simplify this
		Account dto = new Account();
		dto.setUserid(account.getUserid());
		dto.setFirstname(account.getFirstname());
		dto.setLastname(account.getLastname());
		dto.setStatus(account.getStatus());
		dto.setAddr1(account.getAddr1());
		dto.setAddr2(account.getAddr2());
		dto.setCity(account.getCity());
		dto.setState(account.getState());
		dto.setZip(account.getZip());
		dto.setCountry(account.getCountry());
		dto.setPhone(account.getPhone());

		try {
			new AccountDAO().insert(dto);
		} catch (Exception e) {
			e.printStackTrace();
		}

		return account;
	}

	@Override
	public io.macaw.demo.petstore.userservice.Account updateAccount(
			io.macaw.demo.petstore.userservice.Account account) {

		Account dto = new Account();
		dto.setUserid(account.getUserid());
		dto.setFirstname(account.getFirstname());
		dto.setLastname(account.getLastname());
		dto.setStatus(account.getStatus());
		dto.setAddr1(account.getAddr1());
		dto.setAddr2(account.getAddr2());
		dto.setCity(account.getCity());
		dto.setState(account.getState());
		dto.setZip(account.getZip());
		dto.setCountry(account.getCountry());
		dto.setPhone(account.getPhone());

		try {
			new AccountDAO().update(dto);
		} catch (Exception e) {
			e.printStackTrace();
		}
		return account;
	}

	@Override
	public String deleteAccount(io.macaw.demo.petstore.userservice.Account account) {
		try {
			new AccountDAO().deleteById(account.getUserid());
		} catch (Exception e) {
			e.printStackTrace();
		}
		return null;
	}

	@Override
	public java.util.List<io.macaw.demo.petstore.userservice.Account> getAllAccounts() {
		List<Account> accounts = new AccountDAO().findAll();
		return new AccountDAO().getEntitiesFromDTOs(accounts);
	}

	@Override
	public io.macaw.demo.petstore.userservice.Profile createProfile(
		// TODO: Move most of coding to DAO classes
			io.macaw.demo.petstore.userservice.Profile profile) {
		Profile dto = new Profile();
		dto.setUserid(profile.getUserid());
		dto.setOptedfor(profile.getOptedfor());
		dto.setLangref(profile.getLangpref());
		dto.setFavcategory(profile.getFavcategory());
		dto.setBanneropt(profile.getBanneropt());
		try {
			new ProfileDAO().insert(dto);
		} catch (Exception e) {
			e.printStackTrace();
		}

		return profile;
	}

	@Override
	public io.macaw.demo.petstore.userservice.Profile updateProfile(
			io.macaw.demo.petstore.userservice.Profile profile) {
		Profile dto = new Profile();
		dto.setUserid(profile.getUserid());
		dto.setOptedfor(profile.getOptedfor());
		dto.setLangref(profile.getLangpref());
		dto.setFavcategory(profile.getFavcategory());
		dto.setBanneropt(profile.getBanneropt());
		try {
			new ProfileDAO().update(dto);
		} catch (Exception e) {
			e.printStackTrace();
		}

		return profile;
	}

	@Override
	public String deleteProfile(String userid) {
		try {
			new ProfileDAO().deleteById(userid);
		} catch (Exception e) {
			e.printStackTrace();
		}
		return null;
	}

	@Override
	public io.macaw.demo.petstore.userservice.Profile getProfileByUserid(String userid) {
		Profile pro = new ProfileDAO().findById(userid);
		return (new ProfileDAO().getEntityFromDTO(pro));
		
	}

	@Override
	public io.macaw.demo.petstore.userservice.Bannerdata createBannerdata(String favcategory, String bannername) {
		Bannerdata dto = new Bannerdata();
		io.macaw.demo.petstore.userservice.Bannerdata bannerdata = DomainEntityInstantiator.getInstance()
				.newInstance(io.macaw.demo.petstore.userservice.Bannerdata.class);
		dto.setFavcategory(favcategory);
		dto.setBannername(bannername);
		try {
			new BannerdataDAO().insert(dto);
			;
		} catch (Exception e) {
			e.printStackTrace();
		}
		return bannerdata;
	}

	@Override
	public String getBannernameByFavcategory(String favcategory) {
		Bannerdata bannerdata = new BannerdataDAO().findById(favcategory);
		return (bannerdata.getBannername());
	}

	@Override
	public io.macaw.demo.petstore.userservice.Bannerdata updateBannername(String favcategory, String bannername) {
		Bannerdata dto = new Bannerdata();
		io.macaw.demo.petstore.userservice.Bannerdata bannerdata = DomainEntityInstantiator.getInstance()
				.newInstance(io.macaw.demo.petstore.userservice.Bannerdata.class);
		dto.setFavcategory(favcategory);
		dto.setBannername(bannername);
		try {
			new BannerdataDAO().update(dto);
			;
		} catch (Exception e) {
			e.printStackTrace();
		}
		return bannerdata;
	}

	@Override
	public String updatePassword(String userid, String password) {
		Credentials dto = new Credentials();
		dto.setPassword(password);
		dto.setUserid(userid);
		try {
			new CredentialsDAO().update(dto);
		} catch (Exception e) {
			e.printStackTrace();
		}
		return null;
	}

	@Override
	public io.macaw.demo.petstore.userservice.Account getAccountById(String id) {
		Account ac = new AccountDAO().findById(id);
		return new AccountDAO().getEntityFromDTO(ac);
	}

	@Override
	public String authenticateAccount(String id, String password) {
		return new CredentialsDAO().verifyCredentials(id, password);
	}
}
